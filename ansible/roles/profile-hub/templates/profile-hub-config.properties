# CAS Config
casProperties=casServerLoginUrl,serverName,centralServer,casServerName,uriFilterPattern,uriExclusionFilter,authenticateOnlyIfLoggedInFilterPattern,casServerLoginUrlPrefix,gateway,casServerUrlPrefix,contextPath
casServerName={{ auth_base_url }}
casServerUrlPrefix={{ auth_cas_url }}
casServerLoginUrl={{ auth_cas_url }}/login
security.cas.loginUrl={{ auth_cas_url }}/login
security.cas.logoutUrl={{ auth_cas_url }}/logout
gateway=false
security.cas.adminRole=ROLE_ADMIN

serverURL={{ profile_hub_base_url }}
grails.serverURL={{ profile_hub_url }}
serverName={{ profile_hub_base_url }}
security.cas.appServerName={{ profile_hub_base_url }}
contextPath={{ profile_hub_context_path }}
uriExclusionFilterPattern=/images.*,/css.*,/js.*,/less.*
uriFilterPattern=/.*/update.*, /.*/create.*, /.*/delete.*, /user/.*, /audit/.*
authenticateOnlyIfLoggedInFilterPattern=/*

api_key=someApiKey

profile.service.url={{ profile_service_url }}
userdetails.service.url={{ userdetails_base_url }}
images.service.url={{ images_base_url }}
ala.base.url={{ ala_base_url }}
collectory.base.url={{ collectory_base_url }}/
bie.base.url={{ bie_base_url }}
lists.base.url={{ lists_base_url }}
biocache.base.url={{ biocache_base_url }}
biocache.wms.path=/ws/mapping/wms/reflect?q=
biocache.wms.image.path=/ws/mapping/wms/image?q=
biocache.occurrence.search.path=/ws/occurrences/search.json
biocache.occurrence.info.path=/ws/occurrences/info?q=
biocache.occurrence.record.path=/occurrences/

biodiv.library.httpquery.url.prefix=http://www.biodiversitylibrary.org/api2/httpquery.ashx?
biodiv.library.api.key=1265b70b-3f49-4e4a-9f9b-a0e5b1033228
biodiv.library.thumb.url=http://biodiversitylibrary.org/pagethumb/

webservice.readTimeout = 600000
webservice.connectTimeout = 600000


security.authorisation.disable=false
feature.publication=true
